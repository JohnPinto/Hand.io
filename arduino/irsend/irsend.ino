#include <IRremote.h>
#include <SoftwareSerial.h>

IRsend irsend;
const int freq = 38;
String command;

  
const unsigned int ac_on_18_auto_cool[131] PROGMEM = {8900,4500, 500,600, 500,600, 550,1700, 500,
600, 550,1700, 500,600, 550,600, 500,650, 500,600, 550,1700, 500,600, 550,550, 550,600, 
550,600, 500,1700, 550,1700, 500,600, 550,600, 500,600, 550,600, 500,600, 550,
600, 500,600, 550,600, 550,600, 500,600, 550,600, 500,600, 550,600, 550,550, 
550,600, 550,600, 500,600, 550,600, 500,600, 550,600, 550,550, 550,600, 550,
600, 500,600, 550,1700, 500,1750, 500,1700, 500,600, 550,600, 500,600, 550,600, 
500,1750, 500,600, 550,600, 500,600, 550,600, 500,600, 550,1700, 500,1700, 500,1750, 
500,600, 550,600, 500,600, 550,600, 500,1750, 500,600, 500,600, 550,600, 500};




const unsigned int ac_codes[2][131] PROGMEM = {
//ac_codes[0] = ac off
  {8900,4500, 500,600, 500,600, 550,1700, 500,600, 550,600, 
  500,600, 550,600, 500,600, 550,600, 550,1700, 500,600, 550,550, 550,600, 550,1700, 
  500,600, 550,600, 500,600, 550,600, 500,600, 550,600, 500,600, 550,600, 550,550, 550,
  600, 550,600, 500,600, 550,600, 550,550, 550,600, 550,550, 550,600, 550,600, 550,550, 
  550,600, 550,550, 550,600, 550,600, 500,600, 550,600, 500,600, 550,600, 550,1700, 500,
  600, 550,1650, 550,600, 500,600, 550,600, 550,1700, 500,600, 550,600, 500,600, 550,600, 
  500,600, 550,1700, 500,1750, 500,1700, 500,600, 550,600, 500,600, 550,600, 550,1650, 
  550,600, 500,600, 550,600, 550},
//ac_codes[1] = ac on
  {8900,4500, 500,600, 500,600, 550,1700, 500,600, 550,1700, 
  500,600, 550,600, 500,650, 500,600, 550,1700, 500,600, 550,600, 500,600, 550,1700, 500,600, 
  550,600, 550,550, 550,600, 550,550, 550,600, 550,600, 500,600, 550,600, 500,600, 550,600, 550,
  550, 550,600, 550,600, 500,600, 550,600, 500,600, 550,600, 550,600, 500,600, 550,600, 500,600, 
  550,550, 550,600, 550,600, 500,650, 500,1700, 550,1650, 550,600, 500,1700, 550,600, 500,600, 
  550,600, 550,1700, 500,600, 550,600, 500,600, 550,600, 500,600, 550,1700, 500,1700, 550,1700, 
  500,600, 550,600, 500,600, 550,600, 550,1650, 550,600, 500,600, 550,600, 550}
};

const unsigned int  tv_codes[1][39] PROGMEM = {2700,850, 450,850, 500,400, 450,400, 1350,1250, 450,400, 
500,400, 450,400, 450,450, 450,400, 500,400, 450,450, 450,400, 450,450, 450,400, 450,
450, 900,400, 450,850, 500,400, 450};

const int code_size[2] {
//ac
  131,
//tv
  39
};

unsigned int irBuffer[135];


void sendIR(int cod){
    switch (cod)
    {
        case 0:
            Serial.println("TV ON/OFF");
            memcpy_P(irBuffer, &tv_codes[0][0], code_size[1] * 2);  
            irsend.sendRaw(irBuffer, code_size[1], freq);  
            delay(100);
            break;
        case 1:
            Serial.println("AC ON");
            memcpy_P(irBuffer, &ac_codes[1][0], code_size[0] * 2); 
            irsend.sendRaw(irBuffer, code_size[0], freq);
            delay(100);
            break;
        case 2:
            Serial.println("AC OFF");
            memcpy_P(irBuffer, &ac_codes[0][0], code_size[0] * 2); 
            irsend.sendRaw(irBuffer, code_size[0], freq);
            delay(100);
            break;
        default:
            Serial.println("Unknown command");
            break;
    }
}


void setup(){
    // Open serial communications and wait for port to open:
    Serial.begin(57600);
    while (!Serial) continue;
    
}

void loop(){
    if(Serial.available() > 0){
        command = Serial.readString();
        Serial.println(command);
        sendIR(command.toInt());
    }
}
